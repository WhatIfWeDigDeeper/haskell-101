1
00:00:00,640 --> 00:00:07,140
Hello everyone, I am Mircea, one of the other
TAs for this course and I will walk you through

2
00:00:07,140 --> 00:00:12,040
using a Haskell editor online, if for whatever
reason, you don't want to install it on your

3
00:00:12,040 --> 00:00:19,040
machine. In order to do this, you can go to
Google and search for FP Complete. It will

4
00:00:20,380 --> 00:00:27,380
be the first hit. Then we go to Developers
and Build a project. We then create a new

5
00:00:28,279 --> 00:00:33,800
project - you can do this without creating
an account if you don't want to. We give it

6
00:00:33,800 --> 00:00:40,800
a name - new-project - and then create it.

7
00:00:43,000 --> 00:00:45,800
You can see that there's already a template

8
00:00:45,989 --> 00:00:52,600
with a default main function implemented which
just says "Welcome to FP Haskell Center".

9
00:00:52,600 --> 00:00:59,550
You can run the project by clicking this small
arrow and you can see the output in the console.

10
00:00:59,550 --> 00:01:04,850
Let's re-implement some of the functions you
have seen before. In order to do that we will

11
00:01:04,850 --> 00:01:12,500
create a new module - we'll call it Test - and
save it. You can see that it will open in

12
00:01:12,670 --> 00:01:23,600
the editor. Let's implement the double function,
which just adds x to x. In order to use this

13
00:01:23,700 --> 00:01:30,400
function from the Main module, we will need
to import it - write "import test".

14
00:01:32,400 --> 00:01:39,100
We'll have to wait for the type checker. Everything
went fine. Let's print the result. So double

15
00:01:39,250 --> 00:01:43,829
takes an argument and adds it to itself, but
in order to print it we will need to first

16
00:01:43,829 --> 00:01:50,700
convert it to a String and for that we will
use the Show function. Let's try to print

17
00:01:50,800 --> 00:01:59,329
double 2. Wait for the type checker, run it
and we can see that we have the result.

18
00:02:00,500 --> 00:02:09,500
Let's also implement the quadruple function by just
applying double twice. 

19
00:02:12,100 --> 00:02:17,300
Type checking went fine, so we'll go to main to print this as well.

20
00:02:27,100 --> 00:02:29,400
We then run it and you can see that

21
00:02:29,459 --> 00:02:36,459
we have the correct result. As a last function,
we will implement factorial.

22
00:02:40,100 --> 00:02:47,100
Factorial is just the product of all numbers from 1 to n.

23
00:02:48,120 --> 00:02:51,700
You can see that this type checks. We go to main..

24
00:02:52,000 --> 00:02:54,200
and we'll print it again.

25
00:03:02,700 --> 00:03:07,200
We then run it and we have the result
printed.

26
00:03:07,700 --> 00:03:08,810
This is it! You can see it's very

27
00:03:08,810 --> 00:03:14,599
easy. If you don't want to install anything,
there's also the online option available.

28
00:03:14,599 --> 00:03:17,500
Thank you for your attention and keep on hacking!

